{"version":3,"file":"index-0100a6da.js","sources":["../../../../node_modules/vuetify/lib/components/VExpansionPanel/VExpansionPanels.mjs","../../../../node_modules/vuetify/lib/components/VExpansionPanel/VExpansionPanelText.mjs","../../../../node_modules/vuetify/lib/components/VExpansionPanel/VExpansionPanelTitle.mjs","../../../../node_modules/vuetify/lib/components/VExpansionPanel/VExpansionPanel.mjs","../../../../pages/index.vue"],"sourcesContent":["import { createVNode as _createVNode, resolveDirective as _resolveDirective } from \"vue\";\n// Styles\nimport \"./VExpansionPanel.css\";\n\n// Composables\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { provideDefaults } from \"../../composables/defaults.mjs\";\nimport { makeGroupProps, useGroup } from \"../../composables/group.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\"; // Utilities\nimport { computed, toRef } from 'vue';\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nexport const VExpansionPanelSymbol = Symbol.for('vuetify:v-expansion-panel');\nconst allowedVariants = ['default', 'accordion', 'inset', 'popout'];\nexport const makeVExpansionPanelsProps = propsFactory({\n  color: String,\n  variant: {\n    type: String,\n    default: 'default',\n    validator: v => allowedVariants.includes(v)\n  },\n  readonly: Boolean,\n  ...makeComponentProps(),\n  ...makeGroupProps(),\n  ...makeTagProps(),\n  ...makeThemeProps()\n}, 'VExpansionPanels');\nexport const VExpansionPanels = genericComponent()({\n  name: 'VExpansionPanels',\n  props: makeVExpansionPanelsProps(),\n  emits: {\n    'update:modelValue': val => true\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    useGroup(props, VExpansionPanelSymbol);\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const variantClass = computed(() => props.variant && `v-expansion-panels--variant-${props.variant}`);\n    provideDefaults({\n      VExpansionPanel: {\n        color: toRef(props, 'color')\n      },\n      VExpansionPanelTitle: {\n        readonly: toRef(props, 'readonly')\n      }\n    });\n    useRender(() => _createVNode(props.tag, {\n      \"class\": ['v-expansion-panels', themeClasses.value, variantClass.value, props.class],\n      \"style\": props.style\n    }, slots));\n    return {};\n  }\n});\n//# sourceMappingURL=VExpansionPanels.mjs.map","import { withDirectives as _withDirectives, vShow as _vShow, createVNode as _createVNode } from \"vue\";\n// Components\nimport { VExpansionPanelSymbol } from \"./VExpansionPanels.mjs\";\nimport { VExpandTransition } from \"../transitions/index.mjs\"; // Composables\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { makeLazyProps, useLazy } from \"../../composables/lazy.mjs\"; // Utilities\nimport { inject } from 'vue';\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.mjs\";\nexport const makeVExpansionPanelTextProps = propsFactory({\n  ...makeComponentProps(),\n  ...makeLazyProps()\n}, 'VExpansionPanelText');\nexport const VExpansionPanelText = genericComponent()({\n  name: 'VExpansionPanelText',\n  props: makeVExpansionPanelTextProps(),\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const expansionPanel = inject(VExpansionPanelSymbol);\n    if (!expansionPanel) throw new Error('[Vuetify] v-expansion-panel-text needs to be placed inside v-expansion-panel');\n    const {\n      hasContent,\n      onAfterLeave\n    } = useLazy(props, expansionPanel.isSelected);\n    useRender(() => _createVNode(VExpandTransition, {\n      \"onAfterLeave\": onAfterLeave\n    }, {\n      default: () => [_withDirectives(_createVNode(\"div\", {\n        \"class\": ['v-expansion-panel-text', props.class],\n        \"style\": props.style\n      }, [slots.default && hasContent.value && _createVNode(\"div\", {\n        \"class\": \"v-expansion-panel-text__wrapper\"\n      }, [slots.default?.()])]), [[_vShow, expansionPanel.isSelected.value]])]\n    }));\n    return {};\n  }\n});\n//# sourceMappingURL=VExpansionPanelText.mjs.map","import { withDirectives as _withDirectives, resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\";\n// Components\nimport { VExpansionPanelSymbol } from \"./VExpansionPanels.mjs\";\nimport { VIcon } from \"../VIcon/index.mjs\"; // Composables\nimport { useBackgroundColor } from \"../../composables/color.mjs\";\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { IconValue } from \"../../composables/icons.mjs\"; // Directives\nimport { Ripple } from \"../../directives/ripple/index.mjs\"; // Utilities\nimport { computed, inject } from 'vue';\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nexport const makeVExpansionPanelTitleProps = propsFactory({\n  color: String,\n  expandIcon: {\n    type: IconValue,\n    default: '$expand'\n  },\n  collapseIcon: {\n    type: IconValue,\n    default: '$collapse'\n  },\n  hideActions: Boolean,\n  ripple: {\n    type: [Boolean, Object],\n    default: false\n  },\n  readonly: Boolean,\n  ...makeComponentProps()\n}, 'VExpansionPanelTitle');\nexport const VExpansionPanelTitle = genericComponent()({\n  name: 'VExpansionPanelTitle',\n  directives: {\n    Ripple\n  },\n  props: makeVExpansionPanelTitleProps(),\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const expansionPanel = inject(VExpansionPanelSymbol);\n    if (!expansionPanel) throw new Error('[Vuetify] v-expansion-panel-title needs to be placed inside v-expansion-panel');\n    const {\n      backgroundColorClasses,\n      backgroundColorStyles\n    } = useBackgroundColor(props, 'color');\n    const slotProps = computed(() => ({\n      collapseIcon: props.collapseIcon,\n      disabled: expansionPanel.disabled.value,\n      expanded: expansionPanel.isSelected.value,\n      expandIcon: props.expandIcon,\n      readonly: props.readonly\n    }));\n    useRender(() => _withDirectives(_createVNode(\"button\", {\n      \"class\": ['v-expansion-panel-title', {\n        'v-expansion-panel-title--active': expansionPanel.isSelected.value\n      }, backgroundColorClasses.value, props.class],\n      \"style\": [backgroundColorStyles.value, props.style],\n      \"type\": \"button\",\n      \"tabindex\": expansionPanel.disabled.value ? -1 : undefined,\n      \"disabled\": expansionPanel.disabled.value,\n      \"aria-expanded\": expansionPanel.isSelected.value,\n      \"onClick\": !props.readonly ? expansionPanel.toggle : undefined\n    }, [_createVNode(\"span\", {\n      \"class\": \"v-expansion-panel-title__overlay\"\n    }, null), slots.default?.(slotProps.value), !props.hideActions && _createVNode(\"span\", {\n      \"class\": \"v-expansion-panel-title__icon\"\n    }, [slots.actions ? slots.actions(slotProps.value) : _createVNode(VIcon, {\n      \"icon\": expansionPanel.isSelected.value ? props.collapseIcon : props.expandIcon\n    }, null)])]), [[_resolveDirective(\"ripple\"), props.ripple]]));\n    return {};\n  }\n});\n//# sourceMappingURL=VExpansionPanelTitle.mjs.map","import { createVNode as _createVNode } from \"vue\";\n// Components\nimport { VExpansionPanelSymbol } from \"./VExpansionPanels.mjs\";\nimport { VExpansionPanelText } from \"./VExpansionPanelText.mjs\";\nimport { makeVExpansionPanelTitleProps, VExpansionPanelTitle } from \"./VExpansionPanelTitle.mjs\"; // Composables\nimport { useBackgroundColor } from \"../../composables/color.mjs\";\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.mjs\";\nimport { makeGroupItemProps, useGroupItem } from \"../../composables/group.mjs\";\nimport { makeLazyProps } from \"../../composables/lazy.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\"; // Utilities\nimport { computed, provide } from 'vue';\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.mjs\";\nexport const makeVExpansionPanelProps = propsFactory({\n  title: String,\n  text: String,\n  bgColor: String,\n  ...makeComponentProps(),\n  ...makeElevationProps(),\n  ...makeGroupItemProps(),\n  ...makeLazyProps(),\n  ...makeRoundedProps(),\n  ...makeTagProps(),\n  ...makeVExpansionPanelTitleProps()\n}, 'VExpansionPanel');\nexport const VExpansionPanel = genericComponent()({\n  name: 'VExpansionPanel',\n  props: makeVExpansionPanelProps(),\n  emits: {\n    'group:selected': val => true\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const groupItem = useGroupItem(props, VExpansionPanelSymbol);\n    const {\n      backgroundColorClasses,\n      backgroundColorStyles\n    } = useBackgroundColor(props, 'bgColor');\n    const {\n      elevationClasses\n    } = useElevation(props);\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const isDisabled = computed(() => groupItem?.disabled.value || props.disabled);\n    const selectedIndices = computed(() => groupItem.group.items.value.reduce((arr, item, index) => {\n      if (groupItem.group.selected.value.includes(item.id)) arr.push(index);\n      return arr;\n    }, []));\n    const isBeforeSelected = computed(() => {\n      const index = groupItem.group.items.value.findIndex(item => item.id === groupItem.id);\n      return !groupItem.isSelected.value && selectedIndices.value.some(selectedIndex => selectedIndex - index === 1);\n    });\n    const isAfterSelected = computed(() => {\n      const index = groupItem.group.items.value.findIndex(item => item.id === groupItem.id);\n      return !groupItem.isSelected.value && selectedIndices.value.some(selectedIndex => selectedIndex - index === -1);\n    });\n    provide(VExpansionPanelSymbol, groupItem);\n    useRender(() => {\n      const hasText = !!(slots.text || props.text);\n      const hasTitle = !!(slots.title || props.title);\n      return _createVNode(props.tag, {\n        \"class\": ['v-expansion-panel', {\n          'v-expansion-panel--active': groupItem.isSelected.value,\n          'v-expansion-panel--before-active': isBeforeSelected.value,\n          'v-expansion-panel--after-active': isAfterSelected.value,\n          'v-expansion-panel--disabled': isDisabled.value\n        }, roundedClasses.value, backgroundColorClasses.value, props.class],\n        \"style\": [backgroundColorStyles.value, props.style]\n      }, {\n        default: () => [_createVNode(\"div\", {\n          \"class\": ['v-expansion-panel__shadow', ...elevationClasses.value]\n        }, null), hasTitle && _createVNode(VExpansionPanelTitle, {\n          \"key\": \"title\",\n          \"collapseIcon\": props.collapseIcon,\n          \"color\": props.color,\n          \"expandIcon\": props.expandIcon,\n          \"hideActions\": props.hideActions,\n          \"ripple\": props.ripple\n        }, {\n          default: () => [slots.title ? slots.title() : props.title]\n        }), hasText && _createVNode(VExpansionPanelText, {\n          \"key\": \"text\",\n          \"eager\": props.eager\n        }, {\n          default: () => [slots.text ? slots.text() : props.text]\n        }), slots.default?.()]\n      });\n    });\n    return {};\n  }\n});\n//# sourceMappingURL=VExpansionPanel.mjs.map","<template>\n  <v-container :fluid=\"true\" class=\"d-block pa-0 ma-0\">\n    <client-only>\n      <v-row class=\"pa-0\">\n        <v-col class=\"pa-0 ma-0 index-page__slider-container\" cols=\"12\">\n          <template v-if=\"mobile\">\n            <vueper-slides :arrows=\"false\" :autoplay=\"true\" :fade=\"true\" :slide-ratio=\"4\"\n                           class=\"no-shadow pa-0 greeting\">\n              <vueper-slide v-for=\"(slide, index) in page.slides\" :key=\"index\" class=\"pa-0\">\n                <template #content>\n                  <nuxt-img provider=\"strapi\" :height=\"388\"\n                            fit=\"fill\"\n                            :src=\"slide.image\"></nuxt-img>\n                </template>\n              </vueper-slide>\n            </vueper-slides>\n            <div class=\"index-page__slider-container--greeting\">\n              <h1 class=\"text-uppercase text-white\">Добро пожаловать</h1>\n              <h2 class=\"text-white\">Мы сделаем Ваш мир ярче.</h2>\n              <v-btn :elevation=\"0\" :height=\"48\" :width=\"185\" class=\"mt-8\"\n                     color=\"secondary\"\n                     style=\"text-transform: initial\" to=\"company\"\n                     variant=\"elevated\">\n                О Компании\n              </v-btn>\n            </div>\n          </template>\n          <template v-else>\n            <vueper-slides :arrows=\"false\" :autoplay=\"true\" :fade=\"true\" :slide-ratio=\"1 / 2\"\n                           class=\"no-shadow pa-0 greeting\"\n                           fixed-height=\"388px\">\n              <vueper-slide v-for=\"(slide, index) in page.slides\" :key=\"index\" class=\"pa-0\">\n                <template #content>\n                  <nuxt-img provider=\"strapi\" :width=\"width\"\n                            fit=\"cover\"\n                            :src=\"slide.image\"></nuxt-img>\n                </template>\n              </vueper-slide>\n            </vueper-slides>\n            <div class=\"index-page__slider-container--greeting\">\n              <h1 class=\"text-uppercase text-white\">Добро пожаловать</h1>\n              <h2 class=\"text-white\">Мы сделаем Ваш мир ярче.</h2>\n              <v-btn :elevation=\"0\" :height=\"48\" :width=\"185\" class=\"mt-8\"\n                     color=\"secondary\"\n                     style=\"text-transform: initial\" to=\"company\"\n                     variant=\"elevated\">\n                О Компании\n              </v-btn>\n            </div>\n          </template>\n        </v-col>\n      </v-row>\n      <v-row class=\"index-page__products-container page__padding\">\n        <v-col cols=\"12\">\n          <h3 class=\"text-center primary--text\">Продукция</h3>\n          <v-row class=\"mx-0 pa-0 mt-6\">\n            <v-col class=\"products-wrapper\" :style=\"xl ? `--count: ${page['products'].length}` : ''\" cols=\"12\">\n              <template v-for=\"(product, index) of page['products']\" :key=\"index\">\n                <product-card :product=\"product\"/>\n              </template>\n            </v-col>\n          </v-row>\n        </v-col>\n      </v-row>\n      <template v-if=\"page['articles'].length\">\n        <template v-if=\"mobile\">\n          <v-row class=\"index-page__articles-container page__padding bg-primary\">\n            <v-col cols=\"12\" class=\"d-flex justify-start flex-column d-lg-block\"\n                   style=\"position: relative; min-height: 770px\">\n              <div class=\"title__container\">\n                <h3 class=\"text-center text-white\" style=\"width: 100%\">Новости компании</h3>\n                <template v-if=\"page['articles'].length > 1\">\n                  <div class=\"d-flex justify-space-between align-center px-4\" style=\"width: 100%;\">\n                    <v-btn :flat=\"true\"\n                           :ripple=\"false\"\n                           class=\"article--button d-flex justify-start align-center px-0\"\n                           variant=\"plain\"\n                           style=\"width: fit-content; height: fit-content\"\n                           @click=\"$refs.articlesCarousel.previous()\">\n                      <svg-icon :path=\"mdiArrowLeftThin\" type=\"mdi\"/>\n                      <span>Предыдущие</span>\n                    </v-btn>\n                    <v-btn :flat=\"true\"\n                           :ripple=\"false\"\n                           class=\"article--button d-flex justify-start align-center px-0\"\n                           style=\"width: fit-content; height: fit-content\"\n                           variant=\"plain\"\n                           @click=\"$refs.articlesCarousel.next()\">\n                      <span>Следующие</span>\n                      <svg-icon :path=\"mdiArrowRightThin\" type=\"mdi\"/>\n                    </v-btn>\n                  </div>\n                </template>\n              </div>\n              <template v-if=\"page['articles'].length > 2\">\n                <div style=\"position: relative;\" class=\"w-full\">\n                  <div style=\"position: absolute; width: 200%; left: -50%\">\n                    <vueper-slides\n                        ref=\"articlesCarousel\"\n                        :arrows=\"false\"\n                        :bullets=\"false\"\n                        :dragging-distance=\"70\"\n                        :gap=\"3\"\n                        :slide-ratio=\"1 / 4\"\n                        :visible-slides=\"3\"\n                        class=\"no-shadow mt-6\"\n                        fixed-height=\"600px\"\n                        slide-multiple>\n                      <vueper-slide v-for=\"(article, index) in page['articles']\" :key=\"index\" class=\"pa-0\">\n                        <template #content>\n                          <article-card :article=\"article\"/>\n                        </template>\n                      </vueper-slide>\n                    </vueper-slides>\n                  </div>\n                </div>\n              </template>\n              <template v-else-if=\"page['articles'].length === 2\">\n                <div style=\"position: relative;\" class=\"w-full\">\n                  <vueper-slides\n                      ref=\"articlesCarousel\"\n                      :arrows=\"false\"\n                      :bullets=\"false\"\n                      :dragging-distance=\"70\"\n                      class=\"no-shadow\"\n                      :visible-slides=\"2\"\n                      :slide-ratio=\"1 / 4\"\n                      :gap=\"5\"\n                      :arrows-outside=\"false\"\n                      fixed-height=\"600px\"\n                      slide-multiple>\n                    <vueper-slide v-for=\"(article, index) in page['articles']\" :key=\"index\" class=\"pa-0\">\n                      <template #content>\n                        <article-card :article=\"article\"/>\n                      </template>\n                    </vueper-slide>\n                  </vueper-slides>\n                </div>\n              </template>\n              <template v-else>\n                <div style=\"position: relative;\" class=\"d-flex justify-center align-center w-full mt-8\">\n                  <article-card :article=\"page['articles'][0]\"/>\n                </div>\n              </template>\n            </v-col>\n          </v-row>\n        </template>\n        <template v-else>\n          <v-row class=\"index-page__articles-container page__padding bg-primary\">\n            <v-col cols=\"12\" class=\"d-flex justify-start flex-column d-lg-block\">\n              <div class=\"title__container\">\n                <v-btn :flat=\"true\"\n                       :height=\"13\"\n                       :ripple=\"false\"\n                       class=\"article--button d-flex justify-start align-center\"\n                       variant=\"plain\"\n                       @click=\"$refs.articlesCarousel.previous()\">\n                  <svg-icon :path=\"mdiArrowLeftThin\" type=\"mdi\"/>\n                  <span>Предыдущие</span>\n                </v-btn>\n                <h3 class=\"text-center text-white\">Новости компании</h3>\n                <v-btn :flat=\"true\"\n                       :height=\"13\"\n                       :ripple=\"false\"\n                       class=\"article--button d-flex justify-start align-center\"\n                       variant=\"plain\"\n                       @click=\"$refs.articlesCarousel.next()\">\n                  <span>Следующие</span>\n                  <svg-icon :path=\"mdiArrowRightThin\" type=\"mdi\"/>\n                </v-btn>\n              </div>\n              <vueper-slides\n                  ref=\"articlesCarousel\"\n                  :arrows=\"false\"\n                  :bullets=\"false\"\n                  :dragging-distance=\"30\"\n                  :gap=\"xl ? 1 : 3\"\n                  :slide-ratio=\"1 / 4\"\n                  :visible-slides=\"xl ? 7 : 3\"\n                  class=\"no-shadow mt-6\"\n                  fixed-height=\"567px\"\n                  slide-multiple>\n                <vueper-slide v-for=\"(article, index) in page['articles']\" :key=\"index\" class=\"pa-0\">\n                  <template #content>\n                    <article-card :article=\"article\"/>\n                  </template>\n                </vueper-slide>\n              </vueper-slides>\n            </v-col>\n          </v-row>\n        </template>\n      </template>\n      <template v-if=\"mobile\">\n        <v-row class=\"ma-0 pa-0\" style=\"margin-top: 576px\">\n          <v-col cols=\"12\" class=\"ma-0 pa-0\">\n            <template v-if=\"page['vacancies'].length\">\n              <v-row class=\"index-page__vacancies-container page__padding\">\n                <v-col cols=\"12\">\n                  <h3 class=\"text-center primary--text\">Список вакансий</h3>\n                  <v-row class=\"mx-0 pa-0 mt-6\">\n                    <v-col class=\"\" cols=\"12\">\n                      <v-expansion-panels class=\"rounded\">\n                        <template v-for=\"(product, index) of page['vacancies']\" :key=\"index\">\n                          <v-expansion-panel class=\"my-4\">\n                            <v-expansion-panel-title class=\"bg-primary text-white rounded pr-0\">\n                              <template v-slot:default=\"{ expanded }\">\n                                <div class=\"d-flex align-center justify-space-between\" style=\"width: 100%\">\n                                  <span>{{ product.title }}</span>\n                                  <svg-icon :path=\"expanded ? mdiChevronDown : mdiChevronLeft\" type=\"mdi\"/>\n                                </div>\n                              </template>\n                            </v-expansion-panel-title>\n                            <v-expansion-panel-text class=\"rounded\" v-html=\"product.description\">\n                            </v-expansion-panel-text>\n                          </v-expansion-panel>\n                        </template>\n                      </v-expansion-panels>\n                    </v-col>\n                  </v-row>\n                </v-col>\n              </v-row>\n            </template>\n          </v-col>\n        </v-row>\n      </template>\n      <template v-else>\n        <template v-if=\"page['vacancies'].length\">\n          <v-row class=\"index-page__vacancies-container page__padding\">\n            <v-col cols=\"12\">\n              <h3 class=\"text-center primary--text\">Список вакансий</h3>\n              <v-row class=\"mx-0 pa-0 mt-6\">\n                <v-col class=\"\" cols=\"12\">\n                  <v-expansion-panels class=\"rounded\">\n                    <template v-for=\"(product, index) of page['vacancies']\" :key=\"index\">\n                      <v-expansion-panel class=\"my-4\">\n                        <v-expansion-panel-title class=\"bg-primary text-white rounded pr-0\">\n                          <template v-slot:default=\"{ expanded }\">\n                            <div class=\"d-flex align-center justify-space-between\" style=\"width: 100%\">\n                              <span>{{ product.title }}</span>\n                              <svg-icon :path=\"expanded ? mdiChevronDown : mdiChevronLeft\" type=\"mdi\"/>\n                            </div>\n                          </template>\n                        </v-expansion-panel-title>\n                        <v-expansion-panel-text class=\"rounded pa-4\" v-html=\"product.description\">\n                        </v-expansion-panel-text>\n                      </v-expansion-panel>\n                    </template>\n                  </v-expansion-panels>\n                </v-col>\n              </v-row>\n            </v-col>\n          </v-row>\n        </template>\n      </template>\n      <v-row class=\"index-page__map-container\">\n        <v-col class=\"pa-0 ma-0\" cols=\"12\">\n          <map-component/>\n        </v-col>\n      </v-row>\n    </client-only>\n  </v-container>\n</template>\n\n<script setup>\nimport {computed, ref, watch} from 'vue'\nimport SvgIcon from '@jamescoyle/vue-icon'\nimport {VueperSlide, VueperSlides} from \"vueperslides\";\nimport {mdiArrowLeftThin, mdiArrowRightThin, mdiChevronDown, mdiChevronLeft} from \"@mdi/js\";\nimport ProductCard from \"~/components/cards/ProductCard.vue\";\nimport ArticleCard from \"~/components/cards/ArticleCard.vue\";\nimport MapComponent from \"~/components/MapComponent.vue\";\nimport {useDisplay} from \"vuetify\";\n\ndefinePageMeta({\n  breadcrumb: 'Главная'\n})\n\nconst {data: result} = await useFetch('/api/index', {\n  baseURL: 'https://proxy.macroprint.site',\n  method: 'GET'\n})\n\nconst page = computed(() => {\n  return result.value\n})\n\nconst width = computed(() => {\n  return useDisplay().width.value\n})\n\nconst { xlAndUp } = useDisplay()\n\nconst xl = ref(false)\n\nconst { mdAndDown } = useDisplay()\n\nconst mobile = ref(false)\n\nwatch(mdAndDown, (val) => {\n  mobile.value = !!val\n}, {immediate: true})\n\nwatch(xlAndUp, (val) => {\n  xl.value = !!val\n}, {immediate: true})\n\nuseServerSeoMeta({\n  ogTitle: () => page.value['seo']['og_title'],\n  title: () => page.value['seo'].title,\n  description: () => page.value['seo'].description,\n  ogDescription: () => page.value['seo']['og_description'],\n  ogImage: () => 'http://macroprint.by/img/mainLogo.png',\n  ogUrl: () => 'http://macroprint.by'\n})\n\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>\n"],"names":["_createVNode","_withDirectives","_vShow","_resolveDirective"],"mappings":"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_google_ignoreList":[0,1,2,3]}